#
# This file is part of "hybris integration" plugin for Intellij IDEA.
# Copyright (C) 2014-2016 Alexander Bartash <AlexanderBartash@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

action.ImpexRemoteControl.Validate.text=Validate selected Impex
action.ImpexRemoteControl.Validate.description=Validate IMPEX file via remote hybris instance
action.ImpexRemoteControl.Validate.short.text=Validate
action.ImpexRemoteControl.Import.text=Import selected Impex
action.ImpexRemoteControl.Import.description=Import IMPEX file to remote hybris instance
action.ImpexRemoteControl.Import.short.text=Import
action.FSRemoteControl.Execute.text=Execute selected FlexibleSearch Statement
action.FSRemoteControl.Execute.short.text=Execute
action.FSRemoteControl.Execute.description=Execute FlexibleSearch file via remote hybris instance

hybris.project.import.scanning=Scanning hybris Projects
hybris.project.import.commit=Importing hybris Projects
hybris.project.name=hybris
non.hybris.project.name=other
hybris.project.error=Error
hybris.project.import.run.configuration.remote.debug=Remote debug
hybris.project.import.searching.hybris.distribution=Searching hybris Distribution
hybris.project.import.scan.failed=Failed to scan following paths: {0}
hybris.project.import.dialog.message=<b>hybris</b> - select parent directory which contains all hybris and custom extensions
hybris.project.import.duplicate.projects.found=Duplicate modules selected:\n\n{0}\n\nPlease deselect duplicates.
hybris.project.import.found.idea.module.files=Found Idea Module Files
hybris.project.import.select.directory.where.new.idea.module.files.will.be.stored=Select a Directory Where New IDEA Module Files Will Be Stored.
hybris.project.import.error.nothing.found.to.import=Nothing found to import
hybris.project.import.error.unable.to.proceed=Unable to Proceed
hybris.project.import.followSymlink=Include symbolic links for a project import
hybris.project.import.scannExternalModules=Scan for hybris modules even in external modules i.e. eclipse. (slower import/refresh)
hybris.project.view.junk.directory.name=junk (virtual directory)

hybris.import.label.select.hybris.src.file=Select Source Code Zip File or Directory (Optional).
hybris.import.label.select.hybris.distribution.directory=Select Hybris Installation Directory
hybris.import.label.select.custom.extensions.directory=Select Custom Extensions Directory
hybris.import.label.select.config.extensions.directory=Select Config Directory
hybris.import.label.select.dbdriver.extensions.directory=Select DB drivers Directory
hybris.import.settings.impex.title=Impex
hybris.import.settings.project.title=Project Import
hybris.import.settings.junk.directory.name=Junk directories (will be grouped into a virtual directory)
hybris.import.settings.junk.directory.popup.edit.title=Edit
hybris.import.settings.junk.directory.popup.edit.text=Edit directory name
hybris.import.settings.junk.directory.popup.add.title=Add
hybris.import.settings.junk.directory.popup.add.text=Add directory name
hybris.import.settings.spring.for.custom.extensions.only=Create Spring facet for custom extensions only
hybris.import.settings.group.modules=Group Modules
hybris.import.settings.group.platform=platform
hybris.import.settings.group.custom=custom
hybris.import.settings.group.customunused=custom/unused
hybris.import.settings.group.hybris=hybris
hybris.import.settings.group.hybrisunused=hybris/unused
hybris.import.settings.group.nonhybris=others
hybris.import.settings.import.ootb.modules.read.only.label=Default value for Import OOTB modules in read-only mode
hybris.import.settings.import.ootb.modules.read.only.tooltip=This Value will be pre-filled everytime you import a new project. Extremely improves compilation performance and reduces possible amount of compilation errors but you wont be able to use code assistance in OOTB modules.
hybris.import.settings.tsv.diagram.name=Type System Diagram - Stop Types
hybris.import.settings.tsv.diagram.popup.edit.title=Edit
hybris.import.settings.tsv.diagram.popup.edit.text=Edit Type name
hybris.import.settings.tsv.diagram.popup.add.title=Add
hybris.import.settings.tsv.diagram.popup.add.text=Add Type name

hybris.toolwindow.remote.label=Remote Hybris instance
hybris.toolwindow.ip.label=Running instance IP address
hybris.toolwindow.port.label=Running instance SSL port
hybris.toolwindow.preview.label=Running instance URL preview
hybris.toolwindow.hac.login.label=HAC login name
hybris.toolwindow.hac.password.label=HAC password
hybris.toolwindow.hac.test.connection.button=Test connection
hybris.toolwindow.hac.test.connection.fail=Connection failed
hybris.toolwindow.hac.test.connection.success=Successfully connected to hac console
hybris.toolwindow.hac.test.connection.title=Test connection

hybris.import.wizard.import.ootb.modules.read.only.label=Import OOTB modules in read-only mode
hybris.import.wizard.import.ootb.modules.read.only.tooltip=Extremely improves compilation performance and reduces possible amount of compilation errors but you wont be able to use code assistance in OOTB modules.
hybris.import.wizard.source.code.path.label=hybris Source Code (Optional)
hybris.import.wizard.source.code.path.tooltip=hybris source code directory or *.zip file
hybris.import.wizard.javadoc.url.label=hybris Javadoc Url (Optional)
hybris.import.wizard.javadoc.url.tooltip=Url of hybris javadoc (for instance https://download.hybris.com/api/5.7.0/commercesuite/).
hybris.import.wizard.project.name.label=Project Name
hybris.import.wizard.store.idea.modules.file.in.label=Store IDEA Module Files In
hybris.import.wizard.store.idea.modules.file.in.tooltip=A directory where all IDEA module files will be stored.
hybris.import.wizard.hybris.addon.circular.dependency.label=Create circular dependency for AddOns
hybris.import.wizard.hybris.addon.circular.dependency.warning=Circular dependency is needed for AddOns which use classes from storefront. That is usually a violation of object oriented practices. Consider fixing your AddOn instead!
hybris.import.wizard.hybris.directory.override.label=Custom Directory Override
hybris.import.wizard.hybris.directory.override.tooltip=if your project doesn't follow the recommended directory structure, click here to override
hybris.import.wizard.config.directory.override.tooltip=If your config directory is not in default place, click here to override
hybris.import.wizard.config.directory.override.filechooser=Overriding Config Directory
hybris.import.wizard.config.directory.override.label=Config Directory Override
hybris.import.wizard.config.directory.override.separator.label=The config directory that will be used for import. This is equivalent of environment HYBIRS_CONFIG_DIR parameter.
hybris.import.wizard.dbdriver.directory.override.tooltip=If you keep DB drivers outside of hybris platform, click here to override
hybris.import.wizard.dbdriver.directory.override.filechooser=Overriding DB driver Directory
hybris.import.wizard.dbdriver.directory.override.label=DB driver Directory Override
hybris.import.wizard.dbdriver.directory.override.separator.label=The DB driver directory that contains DB driver jar files (used to execute Integration test from IDE)
hybris.import.wizard.hybris.distribution.directory.and.custom.directory.separator.label=If you custom directory is in bin/ext-* directory or is outside of the project root directory you can override it below
hybris.import.wizard.hybris.distribution.directory.label=hybris Installation Directory
hybris.import.wizard.hybris.distribution.directory.tooltip=It's the root directory where your hybris is located. By default the name of the directory is "hybris".
hybris.import.wizard.custom.extensions.directory.label=Custom Extensions Directory
hybris.import.wizard.custom.extensions.directory.tooltip=It's the directory where you keep all you custom directories. By default it is "bin/custom". This directory can contain subdirectories.
hybris.import.wizard.validation.hybris.distribution.directory.empty="hybris Installation Directory" parameter can not be empty.
hybris.import.wizard.validation.hybris.distribution.directory.does.not.exist=hybris installation directory does not exist or is not a directory.
hybris.import.wizard.validation.custom.extensions.directory.empty="Custom Extensions Directory" parameter can not be empty.
hybris.import.wizard.validation.custom.extensions.directory.does.not.exist=Custom extensions directory does not exist or is not a directory.
hybris.import.wizard.validation.config.directory.does.not.exist=Config directory does not exist or is not a directory.
hybris.import.wizard.validation.dbdriver.directory.does.not.exist=DB drivers directory does not exist or is not a directory.
hybris.import.wizard.required.plugins.title=Warning
hybris.import.wizard.required.plugins.description=Some of the required or optional plugins are not installed or disabled.\n\nHybris import may not work properly.
hybris.import.wizard.required.plugins.not.installed=These plugins are not installed
hybris.import.wizard.required.plugins.not.enabled=These plugins are not enabled
hybris.import.wizard.required.plugins.enable.button=enable and restart
hybris.import.wizard.information.compilation.label=Compilation
hybris.import.wizard.information.compilation.text=Make sure the project is compiled by <b>ant clean all</b> prior to import.<br/><br/>We now fully support IDE incremental compilation. This will save time as only changed classes will be compiled. To allow this feature you need to follow those rules:<br/><ul><li>When you add a new module, you need to execute ant clean all. You then need to trigger Build->Rebuild project.</li><li>Do not mix ant and IDE compilation. It can lead to "unknown" state. Whenever you execute ant all and would like to use IDE compilation then you need to trigger Build->Rebuild project.</li><li>Once compiled by IDE you don't need to compile by ant in order to run hybris.</li></ul>
hybris.import.wizard.information.vcs.label=VCS
hybris.import.wizard.information.vcs.text=Make sure you commit all files in <i>.idea</i> folder except <i>workspace.xml</i> and <i>tasks.xml</i>.<br/>Especially <i>.idea/hybrisProjectSettings.xml</i> must be in VCS.<br/>Also commit all *.iml files from idea-module-files directory.
hybris.import.wizard.information.jrebel.label=JRebel && hotSwap
hybris.import.wizard.information.jrebel.text=IDEA needs to build its own compile tree to enable hotSwap.<br/>Once the project is imported and indexed you need to trigger Build->Rebuild project once only.
hybris.import.wizard.information.jira.label=Feedback
hybris.import.wizard.information.jira.text=We'd love to hear from you! you can report any suggestion, feature request or a bug to us <a href="https://hybris-integration.atlassian.net/admin/users/sign-up">here</a>. 
hybris.business.process.provider.name=hybris Business Process
hybris.business.process.timeout=Timeout:
hybris.stats.permission.label=Statistics Collection
hybris.stats.permission.cancel=Close Project
hybris.stats.permission.text=We would like to get statistics about plugin usage. We do not collect any information your project. We just want to know which features from this plugin our users need most and learn new ways how to make the plugin better. We will never disclose the collected information to 3rd party.\nThe statistic collection is mandatory for the plugin usage. OpenCollective supporters are exempted.
hybris.stats.permission.checkbox=I agree to send statistics for the plugin development purposes only.

hybris.project.view.tree.settings=Project Tree Settings
hybris.project.view.tree.hide.empty.middle.folders=Hide Empty Middle Folders

hybris.inspection.tsv.key=hybris TSV Inspections

hybris.project.open.outdated.title=Outdated project structure
hybris.project.open.outdated.text=Re-import your project <a href="here">here</a> or by File->New->Project from existing sources->Import project from external model->hybris
hybris.project.import.preparation=Initializing module import
hybris.project.import.facets=Configuring facets
hybris.project.import.spring=Configuring Spring
hybris.project.import.module.import=Importing module {0}
hybris.project.import.module.settings=Configuring module settings
hybris.project.import.module.sdk=Configuring SDK
hybris.project.import.module.libs=Configuring libraries
hybris.project.import.module.content=Configuring module content roots
hybris.project.import.module.outputpath=Configuring output paths
hybris.project.import.module.javadoc=Configuring javadoc
hybris.project.import.module.groups=Configuring module group
hybris.project.import.module.facet=Configuring module facets
hybris.project.import.dependencies=Configuring module dependencies
hybris.project.import.runconfigurations=Configuring run configuration
hybris.project.import.vcs=Detecting Version Control System
hybris.project.import.search.scope=Configuring custom search scopes
hybris.project.import.saving.project=Saving project
hybris.project.import.eclipse=Configuring Eclipse modules
hybris.project.import.gradle=Configuring Gradle modules
hybris.project.import.data.sources=Configuring Data Sources

hybris.gutter.navigate.no.matching.beans=No matching beans found
hybris.bean.class.navigate.choose.class.title=Choose Bean
hybris.item.class.tooltip.navigate.declaration=Navigate to the hybris item declaration(s)

hybris.module.dependencies.diagram.provider.name=hybris Module Dependencies

hybris.notification.group=Hybris
evaluation.license.discount.offer.bubble.title=<b>15% OFF</b> Intellij Ultimate Edition
evaluation.license.discount.offer.bubble.text=

discount.offer.bubble.title=SPECIAL OFFER!
discount.offer.bubble.text=<p>Get an exclusive discount on IntelliJ Ultimate Edition!</p>\
<p>IntelliJ is the #1 IDE in the world (in our humble opinion ;-) ), and Ultimate Edition comes packed with advanced features and functionality that further enable exceptional productivity throughout your development activities.</p>\
<p><br/>The hybris Integration Plugin has taken advantage of many of these features to offer you even more power and productivity in your hybris development projects, including:</p>\
<ul>\
<li>Spring Integration</li>\n\
<li>Type System Diagrams</li>\n\
<li>Business Process Diagrams</li>\n\
<li>Project Module (Extension) Dependency Diagrams</li>\n\
<li>Web Facets</li>\
</ul>\
<p>To claim this exclusive discount, click <a href="http://offer.hybris4intellij.com">here</a>.</p>\
<p><em>PLEASE NOTE: We only have a limited supply of this discount offer. Each code is unique, and can only be claimed once. To ensure that you are able to claim your discount, we recommend keeping your code safe, and process your purchase within 7 days.</em></p>\
<p>For more information on Ultimate Edition, see this <a href="https://www.jetbrains.com/idea/features/editions_comparison_matrix.html">comparison</a>.</p>\
<p>For more information on the hybris Integration Plugin, see <a href="https://wiki.hybris.com/display/~martin.zdarsky@hybris.com/Hybris+Integration+Intellij+IDEA+Plugin">here</a>.</p>

support.us.step.title=Get 15% discount on Ultimate Intellij IDEA and more
support.us.step.text=\
<p>We would like to remind that this is an <b>open source project</b> and that <b>we need all the help we can get</b>:</p>\
<ul>\
<li>On <a href="https://github.com/AlexanderBartash/hybris-integration-intellij-idea-plugin#contribution-guidelines">GitHub</a> you can see our contribution guidelines. One free contributor worth 10 paid contributors.</li>\n\
<li>On <a href="https://opencollective.com/hybris-integration-intellij-idea-plugin">OpenCollective</a> you can send us a buck. Nothing is free, so far we have been paying for this from our own pockets and by our free time. We will use the money to hire freelancers to do some extra work. For you it is just a small contribution and for us it ia monthly budget we can count on, which means regular bug fixes and new features for you!</li>\n\
<li>If you have any kind of useful skills please <a href="mailto:AlexanderBartash@gmail.com">contact us</a> and let us know how we can rock Hybris community together!</li>\n\
<li>If you represent a company you should be interested in well-being of this project as well because it saves time of your developers and your money. Please <a href="mailto:AlexanderBartash@gmail.com">contact us</a> and we can figure out how we can help each other. We can also offer support, training etc. If you work at a company please <a href="mailto:AlexanderBartash@gmail.com">contact us</a> and put us in touch with your managers.</li>\n\
</ul>\n\
<p>We have already revolutionized the way people work with Hybris and <b>we have much more to come</b> believe it or not, all we need is a bit of help to get the required resources. Thank you!</p>\
<p>We have even negotiated an additional <a href="http://offer.hybris4intellij.com">15% discount</a> for IntelliJ Ultimate Edition for all Hybris developers! That is how much we care!</p>\
<p>For more information on the hybris Integration Plugin, see <a href="https://wiki.hybris.com/display/~martin.zdarsky@hybris.com/Hybris+Integration+Intellij+IDEA+Plugin">here</a>.</p>\
<p>Backed by:\
<ul>\
<li><a href="https://opencollective.com/techmatesgroup2">TechmatesGroup</a></li>\
<li><a href="https://opencollective.com/agilevisionio">AgileVision</a></li>\
</ul>

project.import.finished=Project Import Finished
project.refresh.finished=Project Refresh Finished
project.import.notification.title=Hybris Project Import
project.refresh.notification.title=Hybris Project Refresh
import.or.refresh.process.not.finished.yet=The process is not finished yet. Please wait until the IDE finishes project initialization.
hybris.stats.permission.no=I disagree
